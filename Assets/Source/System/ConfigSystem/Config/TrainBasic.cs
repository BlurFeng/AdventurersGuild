// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Train_Basic.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deploy {

  /// <summary>Holder for reflection information generated from Train_Basic.proto</summary>
  public static partial class TrainBasicReflection {

    #region Descriptor
    /// <summary>File descriptor for Train_Basic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrainBasicReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFUcmFpbl9CYXNpYy5wcm90bxIGZGVwbG95Iq0BCgtUcmFpbl9CYXNpYxIK",
            "CgJJZBgBIAEoBRIMCgRUeXBlGAIgASgFEgwKBE5hbWUYAyABKAkSDAoESWNv",
            "bhgEIAEoCRIMCgREZXNjGAUgASgJEgsKA0V4cBgGIAEoBRIZChFSZXF1aXJl",
            "VHJhaW5Qb2ludBgHIAEoBRIUCgxBdHRyaWJ1dGVJZHMYCCADKAUSHAoUQXR0",
            "cmlidXRlQm9udXNQb2ludHMYCSADKAUihwEKD1RyYWluX0Jhc2ljX01hcBIx",
            "CgVJdGVtcxgBIAMoCzIiLmRlcGxveS5UcmFpbl9CYXNpY19NYXAuSXRlbXNF",
            "bnRyeRpBCgpJdGVtc0VudHJ5EgsKA2tleRgBIAEoBRIiCgV2YWx1ZRgCIAEo",
            "CzITLmRlcGxveS5UcmFpbl9CYXNpYzoCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Train_Basic), global::Deploy.Train_Basic.Parser, new[]{ "Id", "Type", "Name", "Icon", "Desc", "Exp", "RequireTrainPoint", "AttributeIds", "AttributeBonusPoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Train_Basic_Map), global::Deploy.Train_Basic_Map.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Train_Basic : pb::IMessage<Train_Basic> {
    private static readonly pb::MessageParser<Train_Basic> _parser = new pb::MessageParser<Train_Basic>(() => new Train_Basic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Train_Basic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.TrainBasicReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Train_Basic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Train_Basic(Train_Basic other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      name_ = other.name_;
      icon_ = other.icon_;
      desc_ = other.desc_;
      exp_ = other.exp_;
      requireTrainPoint_ = other.requireTrainPoint_;
      attributeIds_ = other.attributeIds_.Clone();
      attributeBonusPoints_ = other.attributeBonusPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Train_Basic Clone() {
      return new Train_Basic(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Icon" field.</summary>
    public const int IconFieldNumber = 4;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Desc" field.</summary>
    public const int DescFieldNumber = 5;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Exp" field.</summary>
    public const int ExpFieldNumber = 6;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "RequireTrainPoint" field.</summary>
    public const int RequireTrainPointFieldNumber = 7;
    private int requireTrainPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequireTrainPoint {
      get { return requireTrainPoint_; }
      set {
        requireTrainPoint_ = value;
      }
    }

    /// <summary>Field number for the "AttributeIds" field.</summary>
    public const int AttributeIdsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_attributeIds_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> attributeIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AttributeIds {
      get { return attributeIds_; }
    }

    /// <summary>Field number for the "AttributeBonusPoints" field.</summary>
    public const int AttributeBonusPointsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_attributeBonusPoints_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> attributeBonusPoints_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AttributeBonusPoints {
      get { return attributeBonusPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Train_Basic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Train_Basic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Desc != other.Desc) return false;
      if (Exp != other.Exp) return false;
      if (RequireTrainPoint != other.RequireTrainPoint) return false;
      if(!attributeIds_.Equals(other.attributeIds_)) return false;
      if(!attributeBonusPoints_.Equals(other.attributeBonusPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (RequireTrainPoint != 0) hash ^= RequireTrainPoint.GetHashCode();
      hash ^= attributeIds_.GetHashCode();
      hash ^= attributeBonusPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Desc);
      }
      if (Exp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Exp);
      }
      if (RequireTrainPoint != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RequireTrainPoint);
      }
      attributeIds_.WriteTo(output, _repeated_attributeIds_codec);
      attributeBonusPoints_.WriteTo(output, _repeated_attributeBonusPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (RequireTrainPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequireTrainPoint);
      }
      size += attributeIds_.CalculateSize(_repeated_attributeIds_codec);
      size += attributeBonusPoints_.CalculateSize(_repeated_attributeBonusPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Train_Basic other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.RequireTrainPoint != 0) {
        RequireTrainPoint = other.RequireTrainPoint;
      }
      attributeIds_.Add(other.attributeIds_);
      attributeBonusPoints_.Add(other.attributeBonusPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 42: {
            Desc = input.ReadString();
            break;
          }
          case 48: {
            Exp = input.ReadInt32();
            break;
          }
          case 56: {
            RequireTrainPoint = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            attributeIds_.AddEntriesFrom(input, _repeated_attributeIds_codec);
            break;
          }
          case 74:
          case 72: {
            attributeBonusPoints_.AddEntriesFrom(input, _repeated_attributeBonusPoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Train_Basic_Map : pb::IMessage<Train_Basic_Map> {
    private static readonly pb::MessageParser<Train_Basic_Map> _parser = new pb::MessageParser<Train_Basic_Map>(() => new Train_Basic_Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Train_Basic_Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.TrainBasicReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Train_Basic_Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Train_Basic_Map(Train_Basic_Map other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Train_Basic_Map Clone() {
      return new Train_Basic_Map(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Deploy.Train_Basic>.Codec _map_items_codec
        = new pbc::MapField<int, global::Deploy.Train_Basic>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Deploy.Train_Basic.Parser), 10);
    private readonly pbc::MapField<int, global::Deploy.Train_Basic> items_ = new pbc::MapField<int, global::Deploy.Train_Basic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Deploy.Train_Basic> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Train_Basic_Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Train_Basic_Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Items.Equals(other.Items)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Items.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_map_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Train_Basic_Map other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
