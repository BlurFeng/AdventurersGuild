// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Pathfinding_LevelGraph.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deploy {

  /// <summary>Holder for reflection information generated from Pathfinding_LevelGraph.proto</summary>
  public static partial class PathfindingLevelGraphReflection {

    #region Descriptor
    /// <summary>File descriptor for Pathfinding_LevelGraph.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PathfindingLevelGraphReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQYXRoZmluZGluZ19MZXZlbEdyYXBoLnByb3RvEgZkZXBsb3kidQoWUGF0",
            "aGZpbmRpbmdfTGV2ZWxHcmFwaBIKCgJJZBgBIAEoBRIPCgdNYXBOYW1lGAIg",
            "ASgJEg0KBVdpZHRoGAMgASgFEg0KBURlcHRoGAQgASgFEhAKCE5vZGVTaXpl",
            "GAUgASgFEg4KBkNlbnRlchgGIAMoBSKoAQoaUGF0aGZpbmRpbmdfTGV2ZWxH",
            "cmFwaF9NYXASPAoFSXRlbXMYASADKAsyLS5kZXBsb3kuUGF0aGZpbmRpbmdf",
            "TGV2ZWxHcmFwaF9NYXAuSXRlbXNFbnRyeRpMCgpJdGVtc0VudHJ5EgsKA2tl",
            "eRgBIAEoBRItCgV2YWx1ZRgCIAEoCzIeLmRlcGxveS5QYXRoZmluZGluZ19M",
            "ZXZlbEdyYXBoOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Pathfinding_LevelGraph), global::Deploy.Pathfinding_LevelGraph.Parser, new[]{ "Id", "MapName", "Width", "Depth", "NodeSize", "Center" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Pathfinding_LevelGraph_Map), global::Deploy.Pathfinding_LevelGraph_Map.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Pathfinding_LevelGraph : pb::IMessage<Pathfinding_LevelGraph> {
    private static readonly pb::MessageParser<Pathfinding_LevelGraph> _parser = new pb::MessageParser<Pathfinding_LevelGraph>(() => new Pathfinding_LevelGraph());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pathfinding_LevelGraph> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.PathfindingLevelGraphReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pathfinding_LevelGraph() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pathfinding_LevelGraph(Pathfinding_LevelGraph other) : this() {
      id_ = other.id_;
      mapName_ = other.mapName_;
      width_ = other.width_;
      depth_ = other.depth_;
      nodeSize_ = other.nodeSize_;
      center_ = other.center_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pathfinding_LevelGraph Clone() {
      return new Pathfinding_LevelGraph(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MapName" field.</summary>
    public const int MapNameFieldNumber = 2;
    private string mapName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapName {
      get { return mapName_; }
      set {
        mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Width" field.</summary>
    public const int WidthFieldNumber = 3;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "Depth" field.</summary>
    public const int DepthFieldNumber = 4;
    private int depth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "NodeSize" field.</summary>
    public const int NodeSizeFieldNumber = 5;
    private int nodeSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeSize {
      get { return nodeSize_; }
      set {
        nodeSize_ = value;
      }
    }

    /// <summary>Field number for the "Center" field.</summary>
    public const int CenterFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_center_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> center_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Center {
      get { return center_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pathfinding_LevelGraph);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pathfinding_LevelGraph other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MapName != other.MapName) return false;
      if (Width != other.Width) return false;
      if (Depth != other.Depth) return false;
      if (NodeSize != other.NodeSize) return false;
      if(!center_.Equals(other.center_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MapName.Length != 0) hash ^= MapName.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (NodeSize != 0) hash ^= NodeSize.GetHashCode();
      hash ^= center_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MapName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MapName);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Depth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Depth);
      }
      if (NodeSize != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NodeSize);
      }
      center_.WriteTo(output, _repeated_center_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      if (NodeSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeSize);
      }
      size += center_.CalculateSize(_repeated_center_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pathfinding_LevelGraph other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MapName.Length != 0) {
        MapName = other.MapName;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      if (other.NodeSize != 0) {
        NodeSize = other.NodeSize;
      }
      center_.Add(other.center_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            MapName = input.ReadString();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Depth = input.ReadInt32();
            break;
          }
          case 40: {
            NodeSize = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            center_.AddEntriesFrom(input, _repeated_center_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Pathfinding_LevelGraph_Map : pb::IMessage<Pathfinding_LevelGraph_Map> {
    private static readonly pb::MessageParser<Pathfinding_LevelGraph_Map> _parser = new pb::MessageParser<Pathfinding_LevelGraph_Map>(() => new Pathfinding_LevelGraph_Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pathfinding_LevelGraph_Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.PathfindingLevelGraphReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pathfinding_LevelGraph_Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pathfinding_LevelGraph_Map(Pathfinding_LevelGraph_Map other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pathfinding_LevelGraph_Map Clone() {
      return new Pathfinding_LevelGraph_Map(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Deploy.Pathfinding_LevelGraph>.Codec _map_items_codec
        = new pbc::MapField<int, global::Deploy.Pathfinding_LevelGraph>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Deploy.Pathfinding_LevelGraph.Parser), 10);
    private readonly pbc::MapField<int, global::Deploy.Pathfinding_LevelGraph> items_ = new pbc::MapField<int, global::Deploy.Pathfinding_LevelGraph>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Deploy.Pathfinding_LevelGraph> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pathfinding_LevelGraph_Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pathfinding_LevelGraph_Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Items.Equals(other.Items)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Items.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_map_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pathfinding_LevelGraph_Map other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
