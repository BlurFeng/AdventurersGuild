// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Skill_Group.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deploy {

  /// <summary>Holder for reflection information generated from Skill_Group.proto</summary>
  public static partial class SkillGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for Skill_Group.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkillGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFTa2lsbF9Hcm91cC5wcm90bxIGZGVwbG95IpwCCgtTa2lsbF9Hcm91cBIK",
            "CgJJZBgBIAEoBRIPCgdGYWN0aW9uGAIgASgFEgwKBFR5cGUYAyABKAUSDwoH",
            "RWxlbWVudBgEIAMoBRIMCgROYW1lGAUgASgJEgwKBEljb24YBiABKAkSDAoE",
            "RGVzYxgHIAEoCRIdChVSYW5rU2tpbGxQb2ludFJlcXVpcmUYCCADKAUSSwoU",
            "UmFua0F0dHJpYnV0ZVJlcXVpcmUYCSADKAsyLS5kZXBsb3kuU2tpbGxfR3Jv",
            "dXAuUmFua0F0dHJpYnV0ZVJlcXVpcmVFbnRyeRo7ChlSYW5rQXR0cmlidXRl",
            "UmVxdWlyZUVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "hwEKD1NraWxsX0dyb3VwX01hcBIxCgVJdGVtcxgBIAMoCzIiLmRlcGxveS5T",
            "a2lsbF9Hcm91cF9NYXAuSXRlbXNFbnRyeRpBCgpJdGVtc0VudHJ5EgsKA2tl",
            "eRgBIAEoBRIiCgV2YWx1ZRgCIAEoCzITLmRlcGxveS5Ta2lsbF9Hcm91cDoC",
            "OAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Skill_Group), global::Deploy.Skill_Group.Parser, new[]{ "Id", "Faction", "Type", "Element", "Name", "Icon", "Desc", "RankSkillPointRequire", "RankAttributeRequire" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Skill_Group_Map), global::Deploy.Skill_Group_Map.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Skill_Group : pb::IMessage<Skill_Group> {
    private static readonly pb::MessageParser<Skill_Group> _parser = new pb::MessageParser<Skill_Group>(() => new Skill_Group());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill_Group> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.SkillGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_Group() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_Group(Skill_Group other) : this() {
      id_ = other.id_;
      faction_ = other.faction_;
      type_ = other.type_;
      element_ = other.element_.Clone();
      name_ = other.name_;
      icon_ = other.icon_;
      desc_ = other.desc_;
      rankSkillPointRequire_ = other.rankSkillPointRequire_.Clone();
      rankAttributeRequire_ = other.rankAttributeRequire_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_Group Clone() {
      return new Skill_Group(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Faction" field.</summary>
    public const int FactionFieldNumber = 2;
    private int faction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Element" field.</summary>
    public const int ElementFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_element_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> element_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Element {
      get { return element_; }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Icon" field.</summary>
    public const int IconFieldNumber = 6;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Desc" field.</summary>
    public const int DescFieldNumber = 7;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RankSkillPointRequire" field.</summary>
    public const int RankSkillPointRequireFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_rankSkillPointRequire_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> rankSkillPointRequire_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RankSkillPointRequire {
      get { return rankSkillPointRequire_; }
    }

    /// <summary>Field number for the "RankAttributeRequire" field.</summary>
    public const int RankAttributeRequireFieldNumber = 9;
    private static readonly pbc::MapField<int, string>.Codec _map_rankAttributeRequire_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<int, string> rankAttributeRequire_ = new pbc::MapField<int, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> RankAttributeRequire {
      get { return rankAttributeRequire_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill_Group);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill_Group other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Faction != other.Faction) return false;
      if (Type != other.Type) return false;
      if(!element_.Equals(other.element_)) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Desc != other.Desc) return false;
      if(!rankSkillPointRequire_.Equals(other.rankSkillPointRequire_)) return false;
      if (!RankAttributeRequire.Equals(other.RankAttributeRequire)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Faction != 0) hash ^= Faction.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= element_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      hash ^= rankSkillPointRequire_.GetHashCode();
      hash ^= RankAttributeRequire.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Faction != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Faction);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      element_.WriteTo(output, _repeated_element_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Desc);
      }
      rankSkillPointRequire_.WriteTo(output, _repeated_rankSkillPointRequire_codec);
      rankAttributeRequire_.WriteTo(output, _map_rankAttributeRequire_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Faction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Faction);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += element_.CalculateSize(_repeated_element_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      size += rankSkillPointRequire_.CalculateSize(_repeated_rankSkillPointRequire_codec);
      size += rankAttributeRequire_.CalculateSize(_map_rankAttributeRequire_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill_Group other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Faction != 0) {
        Faction = other.Faction;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      element_.Add(other.element_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      rankSkillPointRequire_.Add(other.rankSkillPointRequire_);
      rankAttributeRequire_.Add(other.rankAttributeRequire_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Faction = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            element_.AddEntriesFrom(input, _repeated_element_codec);
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 58: {
            Desc = input.ReadString();
            break;
          }
          case 66:
          case 64: {
            rankSkillPointRequire_.AddEntriesFrom(input, _repeated_rankSkillPointRequire_codec);
            break;
          }
          case 74: {
            rankAttributeRequire_.AddEntriesFrom(input, _map_rankAttributeRequire_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Skill_Group_Map : pb::IMessage<Skill_Group_Map> {
    private static readonly pb::MessageParser<Skill_Group_Map> _parser = new pb::MessageParser<Skill_Group_Map>(() => new Skill_Group_Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill_Group_Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.SkillGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_Group_Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_Group_Map(Skill_Group_Map other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_Group_Map Clone() {
      return new Skill_Group_Map(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Deploy.Skill_Group>.Codec _map_items_codec
        = new pbc::MapField<int, global::Deploy.Skill_Group>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Deploy.Skill_Group.Parser), 10);
    private readonly pbc::MapField<int, global::Deploy.Skill_Group> items_ = new pbc::MapField<int, global::Deploy.Skill_Group>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Deploy.Skill_Group> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill_Group_Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill_Group_Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Items.Equals(other.Items)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Items.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_map_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill_Group_Map other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
