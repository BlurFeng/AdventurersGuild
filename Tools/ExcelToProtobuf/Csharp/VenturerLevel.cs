// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Venturer_Level.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Deploy {

  /// <summary>Holder for reflection information generated from Venturer_Level.proto</summary>
  public static partial class VenturerLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for Venturer_Level.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VenturerLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRWZW50dXJlcl9MZXZlbC5wcm90bxIGZGVwbG95IsUBCg5WZW50dXJlcl9M",
            "ZXZlbBIKCgJJZBgBIAEoBRISCgpFeHBSZXF1aXJlGAIgASgFEkQKD0F0dHJp",
            "YnV0ZVZhbHVlcxgDIAMoCzIrLmRlcGxveS5WZW50dXJlcl9MZXZlbC5BdHRy",
            "aWJ1dGVWYWx1ZXNFbnRyeRIVCg1Ta2lsbFBvaW50R2V0GAQgASgFGjYKFEF0",
            "dHJpYnV0ZVZhbHVlc0VudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEo",
            "BToCOAEikAEKElZlbnR1cmVyX0xldmVsX01hcBI0CgVJdGVtcxgBIAMoCzIl",
            "LmRlcGxveS5WZW50dXJlcl9MZXZlbF9NYXAuSXRlbXNFbnRyeRpECgpJdGVt",
            "c0VudHJ5EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLmRlcGxveS5W",
            "ZW50dXJlcl9MZXZlbDoCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Venturer_Level), global::Deploy.Venturer_Level.Parser, new[]{ "Id", "ExpRequire", "AttributeValues", "SkillPointGet" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Deploy.Venturer_Level_Map), global::Deploy.Venturer_Level_Map.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Venturer_Level : pb::IMessage<Venturer_Level> {
    private static readonly pb::MessageParser<Venturer_Level> _parser = new pb::MessageParser<Venturer_Level>(() => new Venturer_Level());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Venturer_Level> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.VenturerLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Venturer_Level() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Venturer_Level(Venturer_Level other) : this() {
      id_ = other.id_;
      expRequire_ = other.expRequire_;
      attributeValues_ = other.attributeValues_.Clone();
      skillPointGet_ = other.skillPointGet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Venturer_Level Clone() {
      return new Venturer_Level(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ExpRequire" field.</summary>
    public const int ExpRequireFieldNumber = 2;
    private int expRequire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpRequire {
      get { return expRequire_; }
      set {
        expRequire_ = value;
      }
    }

    /// <summary>Field number for the "AttributeValues" field.</summary>
    public const int AttributeValuesFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_attributeValues_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 26);
    private readonly pbc::MapField<int, int> attributeValues_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> AttributeValues {
      get { return attributeValues_; }
    }

    /// <summary>Field number for the "SkillPointGet" field.</summary>
    public const int SkillPointGetFieldNumber = 4;
    private int skillPointGet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillPointGet {
      get { return skillPointGet_; }
      set {
        skillPointGet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Venturer_Level);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Venturer_Level other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExpRequire != other.ExpRequire) return false;
      if (!AttributeValues.Equals(other.AttributeValues)) return false;
      if (SkillPointGet != other.SkillPointGet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ExpRequire != 0) hash ^= ExpRequire.GetHashCode();
      hash ^= AttributeValues.GetHashCode();
      if (SkillPointGet != 0) hash ^= SkillPointGet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ExpRequire != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpRequire);
      }
      attributeValues_.WriteTo(output, _map_attributeValues_codec);
      if (SkillPointGet != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SkillPointGet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ExpRequire != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpRequire);
      }
      size += attributeValues_.CalculateSize(_map_attributeValues_codec);
      if (SkillPointGet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillPointGet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Venturer_Level other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ExpRequire != 0) {
        ExpRequire = other.ExpRequire;
      }
      attributeValues_.Add(other.attributeValues_);
      if (other.SkillPointGet != 0) {
        SkillPointGet = other.SkillPointGet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ExpRequire = input.ReadInt32();
            break;
          }
          case 26: {
            attributeValues_.AddEntriesFrom(input, _map_attributeValues_codec);
            break;
          }
          case 32: {
            SkillPointGet = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Venturer_Level_Map : pb::IMessage<Venturer_Level_Map> {
    private static readonly pb::MessageParser<Venturer_Level_Map> _parser = new pb::MessageParser<Venturer_Level_Map>(() => new Venturer_Level_Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Venturer_Level_Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Deploy.VenturerLevelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Venturer_Level_Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Venturer_Level_Map(Venturer_Level_Map other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Venturer_Level_Map Clone() {
      return new Venturer_Level_Map(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Deploy.Venturer_Level>.Codec _map_items_codec
        = new pbc::MapField<int, global::Deploy.Venturer_Level>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Deploy.Venturer_Level.Parser), 10);
    private readonly pbc::MapField<int, global::Deploy.Venturer_Level> items_ = new pbc::MapField<int, global::Deploy.Venturer_Level>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Deploy.Venturer_Level> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Venturer_Level_Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Venturer_Level_Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Items.Equals(other.Items)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Items.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_map_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Venturer_Level_Map other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
